swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
# Début des endpoints qui concernent les transactions
# Récupérer toutes les transactions du mois en cours
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions for the current month
      description: Retrieve all transactions for the current month
      responses:
        '200':
          description: List of transactions for the current month retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
# Récupérer les détails d'une transaction spécifique
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Retrieve details of a specific transaction by its unique ID
      parameters:
        - in: path
          name: transactionId
          description: Unique ID of transaction 
          required: true
          type: string
      responses:
        '200':
          description: The request was successful.
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
# Ajouter une catégorie ou une note à une transaction
  /transactions/{transactionId}/{item}:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add category or note to a transaction
      description: Add a new category or note to a transaction
      parameters:
        - in: path
          name: transactionId
          description: Unique ID of transaction 
          required: true
          type: string
        - in: path
          name: item
          description: Category or note
          required: true
          type: string
        - in: body
          name: body
          description: New category and note information for the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionCategoryNote'  
      responses:
        '200':
          description: The request was successful, the category or note was added correctly
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
# Supprimer une note d'une transaction
  /transactions/{transactionId}/notes/{noteId}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a note from a transaction
      description: Delete a note associated with a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: Unique ID of the transaction
          required: true
          type: string
        - in: path
          name: noteId
          description: Unique ID of the note to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Note deleted successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields or Note cannot be deleted
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
# Définition de la réponse pour la liste des transactions
  TransactionsResponse: 
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionApiResponse'
# Réponse de l'API pour une transaction individuelle
  TransactionApiResponse:
    type: object
    properties:
      transactionId:
        type: string
      date:
        type: string
        format: date
        description: Date of the transaction
      description:
        type: string
        description: Description of the transaction
      amount:
        type: number
        description: Amount of the transaction
      transaction_type:
        type: string
        description: Type of transaction
      note:
        type: string
        description: Note of the transaction
      category:
        type: string
        description: Category of the transaction
# Structure des catégories et des notes associées à une transaction
  TransactionCategoryNote:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
# Réponse de l'API pour une catégorie
  CategoryApiResponse: 
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
# Réponse de l'API pour une note
  NoteApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
